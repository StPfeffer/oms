version: "3.8"

services:
  oms-database:
    image: postgres:16.2
    container_name: oms-database
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: oms
    ports:
      - "5432:5432"
    volumes:
      - "oms-database-volume:/var/lib/postgresql/data"

  inventory:
    image: inventory:latest
    container_name: inventory
    build:
      context: ./inventory
      dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - "oms-inventory-volume:/tmp"

  order:
    image: order:latest
    container_name: order
    build:
      context: ./order
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - inventory
    volumes:
      - "oms-order-volume:/tmp"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:3.0.1
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=pass
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  grafana-data-volume: {}
  oms-database-volume:
  oms-inventory-volume:
  oms-order-volume:
